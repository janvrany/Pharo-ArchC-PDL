/* ex: set tabstop=2 expandtab:
   -*- Mode: C; tab-width: 2; indent-tabs-mode nil -*-
*/
/**
 * @file      powerpc64_isa.ac
 * @author    Jan Vrany
 *
 *            LabWare
 *
 * @version   1.0
 * @date      Mon, 14 Nov 2022
 *
 * @brief     The ArchC POWERPC64 functional model.
 *
 * @attention Copyright (C) 2022-2022 --- LabWare
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 *
 */

/* Note: This file contains only instruction not present in 32bit PowerPC */

AC_ISA(powerpc64) {

  ac_instr<D7> tdi;

  ac_instr<X21> td;

  ISA_CTOR(powerpc64) {

    td.set_asm("td %imm, %reg, %reg", to, ra, rb);
    td.set_asm("td%[trapcond] %reg, %reg", to, ra, rb);
    td.set_decoder(opcd=31, xog=68);
    td.set_cycles(1);

    tdi.set_asm("tdi %imm, %reg, %imm", to, ra, si);
    tdi.set_asm("td%[trapcond]i %reg, %imm", to, ra, si);
    tdi.set_decoder(opcd=2);
    tdi.set_cycles(1);

  }; // ISA_CTOR(powerpc64)

}; // AC_ISA(powerpc64)
